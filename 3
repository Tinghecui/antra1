public abstract class Person
{
    private string _firstName;
    private string _lastName;
    private int _age;

    public Person(string firstName, string lastName, int age)
    {
        _firstName = firstName;
        _lastName = lastName;
        _age = age;
    }

    public string GetFullName()
    {
        return $"{_firstName} {_lastName}";
    }

    public int GetAge()
    {
        return _age;
    }

    public virtual void Introduce()
    {
        Console.WriteLine($"Hello, I am {GetFullName()} and I am {GetAge()} years old.");
    }
}
public class Student : Person
{
    private string _major;
    private double _gpa;

    public Student(string firstName, string lastName, int age, string major, double gpa)
        : base(firstName, lastName, age)
    {
        _major = major;
        _gpa = gpa;
    }

    public string GetMajor()
    {
        return _major;
    }

    public double GetGPA()
    {
        return _gpa;
    }

    public override void Introduce()
    {
        base.Introduce();
        Console.WriteLine($"I am a student majoring in {GetMajor()} with a GPA of {GetGPA()}.");
    }
}
public class Instructor : Person
{
    private string _subject;
    private int _yearsOfExperience;

    public Instructor(string firstName, string lastName, int age, string subject, int yearsOfExperience)
        : base(firstName, lastName, age)
    {
        _subject = subject;
        _yearsOfExperience = yearsOfExperience;
    }

    public string GetSubject()
    {
        return _subject;
    }

    public int GetYearsOfExperience()
    {
        return _yearsOfExperience;
    }

    public override void Introduce()
    {
        base.Introduce();
        Console.WriteLine($"I am an instructor teaching {GetSubject()} with {GetYearsOfExperience()} years of experience.");
    }
}
public class Program
{
    public static void Main(string[] args)
    {
        Student student = new Student("John", "Doe", 20, "Computer Science", 3.5);
        Instructor instructor = new Instructor("Jane", "Smith", 35, "Mathematics", 10);

        student.Introduce();
        instructor.Introduce();
    }
}
